{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91780\\\\Downloads\\\\Quiz\\\\Quiz\\\\src\\\\Components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { quizQuestions } from '../Functions/quizQuestions';\nimport StartButton from './Buttons/StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = _ref => {\n  _s();\n  let {\n    setIsStart,\n    isStart\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [disabledOptions, setDisabledOptions] = useState([]);\n  const handleOptionClick = selectedOption => {\n    const currentCorrectOption = quizQuestions[currentQuestion].answer;\n    if (selectedOption === currentCorrectOption) {\n      setScore(score + 1);\n    }\n    setDisabledOptions([...disabledOptions, selectedOption]);\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentQuestion < quizQuestions.length ? /*#__PURE__*/_jsxDEV(Card, {\n      question: quizQuestions[currentQuestion].question,\n      options: quizQuestions[currentQuestion].options,\n      onClick: handleOptionClick,\n      disabledOptions: disabledOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"You have answered \", score, \" / \", quizQuestions.length, \" correctly!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"60px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          option: \"Start Quiz\",\n          onClick: () => setIsStart(!isStart)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Quiz, \"F4ixHcNQVglGcib71hTtq8UYbMM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Card","quizQuestions","StartButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_ref","_s","setIsStart","isStart","currentQuestion","setCurrentQuestion","score","setScore","disabledOptions","setDisabledOptions","handleOptionClick","selectedOption","currentCorrectOption","answer","children","length","question","options","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginTop","option","_c","$RefreshReg$"],"sources":["C:/Users/91780/Downloads/Quiz/Quiz/src/Components/Quiz.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport { quizQuestions } from '../Functions/quizQuestions';\r\nimport StartButton from './Buttons/StartButton';\r\n\r\nconst Quiz = ({setIsStart, isStart}) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [disabledOptions, setDisabledOptions] = useState([]);\r\n\r\n    const handleOptionClick = (selectedOption) => {\r\n        const currentCorrectOption = quizQuestions[currentQuestion].answer;\r\n        if (selectedOption === currentCorrectOption) {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        setDisabledOptions([...disabledOptions, selectedOption]);\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentQuestion < quizQuestions.length ? (\r\n                <Card\r\n                    question={quizQuestions[currentQuestion].question}\r\n                    options={quizQuestions[currentQuestion].options}\r\n                    onClick={handleOptionClick}\r\n                    disabledOptions={disabledOptions}\r\n                />\r\n            ) : (\r\n                <div>\r\n                    <h2>Quiz App</h2>\r\n                    <div className='result'>\r\n                        <h3>You have answered {score} / {quizQuestions.length} correctly!</h3>\r\n                    </div>\r\n\r\n                    <div style={{\r\n                        marginTop : \"60px\"\r\n                    }}>\r\n                        <StartButton option={\"Start Quiz\"} onClick={() => setIsStart(!isStart)} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAOC,WAAW,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,IAAI,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC,UAAU;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC/B,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMmB,iBAAiB,GAAIC,cAAc,IAAK;IAC1C,MAAMC,oBAAoB,GAAGnB,aAAa,CAACW,eAAe,CAAC,CAACS,MAAM;IAClE,IAAIF,cAAc,KAAKC,oBAAoB,EAAE;MACzCL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACvB;IAEAG,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,cAAc,CAAC,CAAC;IACxDN,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACKV,eAAe,GAAGX,aAAa,CAACsB,MAAM,gBACnCnB,OAAA,CAACJ,IAAI;MACDwB,QAAQ,EAAEvB,aAAa,CAACW,eAAe,CAAC,CAACY,QAAS;MAClDC,OAAO,EAAExB,aAAa,CAACW,eAAe,CAAC,CAACa,OAAQ;MAChDC,OAAO,EAAER,iBAAkB;MAC3BF,eAAe,EAAEA;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,gBAEF1B,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAI;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjB1B,OAAA;QAAK2B,SAAS,EAAC,QAAQ;QAAAT,QAAA,eACnBlB,OAAA;UAAAkB,QAAA,GAAI,oBAAkB,EAACR,KAAK,EAAC,KAAG,EAACb,aAAa,CAACsB,MAAM,EAAC,aAAW;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpE,eAEN1B,OAAA;QAAK4B,KAAK,EAAE;UACRC,SAAS,EAAG;QAChB,CAAE;QAAAX,QAAA,eACElB,OAAA,CAACF,WAAW;UAACgC,MAAM,EAAE,YAAa;UAACR,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAAC,CAACC,OAAO;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEb,iBACF;AAEX,CAAC;AAACrB,EAAA,CAxCIF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}